package com.company.sensorsAPI;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

@Controller
@RequestMapping(path = "/sensor")
public class RoomController {
    @Autowired // This means to get the bean called sensorRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private RoomRepository roomRepository;
    @Autowired
    private StatisticsDataRepository statisticsDataRepository;
    @Autowired
    private SensorRepository sensorRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody
    Room addNewSensor(@RequestBody Room room) {

        SensorFactory.createSensor(room);
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Sensor sensor = new Sensor(room.getId(), 1, 1, 1);
        sensorRepository.save(sensor);
        return roomRepository.save(room);
    }

    @PostMapping(path = "/delete") // Map ONLY POST Requests
    public @ResponseBody
    boolean removeSensor(@RequestBody Room room) {

        Iterable<Room> rooms = roomRepository.findAll();
        for (Room room1 : rooms) {
            if(room.getName().equals(room1.getName())){
                roomRepository.delete(room1);
                return true;
            }
        }
        return false;
    }

    @GetMapping(path = "/sensors")
    public @ResponseBody
    Iterable<Room> getAllSensors() {
        // This returns a JSON or XML with the users
        Iterable<Room> rooms = roomRepository.findAll();
        Iterable<Sensor> sensors = sensorRepository.findAll();
        for (Sensor s : sensors) {
            statisticsDataRepository.save(new StatisticsData(s.getRoomId(), s.getTemperature(),
                    s.getCurrentConsumption(), s.getLightsOnNumberInHours()));
        }
        return rooms;
    }
}